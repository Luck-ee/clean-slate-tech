import { useState, useCallback } from 'react';
import { Upload, FileText, CheckCircle, AlertCircle, Shield, Download } from 'lucide-react';
import { Button } from '@/components/ui/button';

interface VerificationStatus {
  status: 'idle' | 'uploading' | 'verifying' | 'success' | 'error';
  message: string;
  details?: {
    deviceId?: string;
    wipeMethod?: string;
    timestamp?: string;
    signature?: string;
  };
}

const VerificationSection = () => {
  const [verificationStatus, setVerificationStatus] = useState<VerificationStatus>({
    status: 'idle',
    message: 'Upload a certificate to verify its authenticity'
  });

  const [dragOver, setDragOver] = useState(false);

  const handleDragOver = useCallback((e: React.DragEvent) => {
    e.preventDefault();
    setDragOver(true);
  }, []);

  const handleDragLeave = useCallback((e: React.DragEvent) => {
    e.preventDefault();
    setDragOver(false);
  }, []);

  const handleDrop = useCallback((e: React.DragEvent) => {
    e.preventDefault();
    setDragOver(false);
    
    const files = Array.from(e.dataTransfer.files);
    if (files.length > 0) {
      handleFileUpload(files[0]);
    }
  }, []);

  const handleFileUpload = (file: File) => {
    if (!file.name.toLowerCase().endsWith('.pdf')) {
      setVerificationStatus({
        status: 'error',
        message: 'Please upload a PDF certificate file'
      });
      return;
    }

    setVerificationStatus({
      status: 'uploading',
      message: 'Uploading certificate...'
    });

    // Simulate upload and verification process
    setTimeout(() => {
      setVerificationStatus({
        status: 'verifying',
        message: 'Verifying certificate authenticity...'
      });

      setTimeout(() => {
        // Simulate successful verification
        setVerificationStatus({
          status: 'success',
          message: 'Certificate verified successfully',
          details: {
            deviceId: 'WD-WCAV2S123456',
            wipeMethod: 'DoD 3-Pass (NIST 800-88)',
            timestamp: new Date().toLocaleString(),
            signature: 'Valid RSA-2048 signature'
          }
        });
      }, 2000);
    }, 1000);
  };

  const handleFileInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {
    const file = e.target.files?.[0];
    if (file) {
      handleFileUpload(file);
    }
  };

  const getStatusIcon = () => {
    switch (verificationStatus.status) {
      case 'success':
        return <CheckCircle className="h-8 w-8 text-success" />;
      case 'error':
        return <AlertCircle className="h-8 w-8 text-destructive" />;
      case 'uploading':
      case 'verifying':
        return <div className="h-8 w-8 border-4 border-primary border-t-transparent rounded-full animate-spin" />;
      default:
        return <FileText className="h-8 w-8 text-muted-foreground" />;
    }
  };

  const getStatusColor = () => {
    switch (verificationStatus.status) {
      case 'success':
        return 'status-success';
      case 'error':
        return 'status-error';
      case 'uploading':
      case 'verifying':
        return 'status-warning';
      default:
        return '';
    }
  };

  return (
    <section id="verification" className="section-padding bg-background">
      <div className="section-container">
        <div className="text-center max-w-3xl mx-auto mb-16">
          <div className="bg-primary/10 p-4 rounded-full w-fit mx-auto mb-6">
            <Shield className="h-12 w-12 text-primary" />
          </div>
          <h2 className="text-3xl md:text-4xl font-bold text-foreground mb-6">
            Certificate Verification
          </h2>
          <p className="text-lg text-muted-foreground">
            Verify the authenticity of your data wiping certificates. Upload your PDF certificate 
            to confirm it was generated by our secure system and hasn't been tampered with.
          </p>
        </div>

        <div className="max-w-2xl mx-auto">
          {/* Upload Zone */}
          <div
            className={`upload-zone ${dragOver ? 'dragover' : ''}`}
            onDragOver={handleDragOver}
            onDragLeave={handleDragLeave}
            onDrop={handleDrop}
            onClick={() => document.getElementById('file-input')?.click()}
          >
            <input
              id="file-input"
              type="file"
              accept=".pdf"
              onChange={handleFileInputChange}
              className="hidden"
            />
            
            <div className="flex flex-col items-center space-y-4">
              <Upload className="h-12 w-12 text-primary" />
              <div className="text-center">
                <p className="text-lg font-medium text-foreground mb-2">
                  Upload Certificate
                </p>
                <p className="text-muted-foreground">
                  Drag and drop your PDF certificate or click to browse
                </p>
              </div>
            </div>
          </div>

          {/* Verification Status */}
          <div className="mt-8">
            <div className={`feature-card ${getStatusColor()}`}>
              <div className="flex items-center space-x-4">
                {getStatusIcon()}
                <div className="flex-1">
                  <h3 className="font-semibold text-lg">
                    Verification Status
                  </h3>
                  <p className="text-sm opacity-90">
                    {verificationStatus.message}
                  </p>
                </div>
              </div>

              {/* Verification Details */}
              {verificationStatus.status === 'success' && verificationStatus.details && (
                <div className="mt-6 space-y-3">
                  <div className="border-t border-white/20 pt-4">
                    <h4 className="font-medium mb-3">Certificate Details:</h4>
                    <div className="grid grid-cols-1 md:grid-cols-2 gap-3 text-sm">
                      <div>
                        <span className="opacity-75">Device ID:</span>
                        <p className="font-mono">{verificationStatus.details.deviceId}</p>
                      </div>
                      <div>
                        <span className="opacity-75">Wipe Method:</span>
                        <p>{verificationStatus.details.wipeMethod}</p>
                      </div>
                      <div>
                        <span className="opacity-75">Timestamp:</span>
                        <p>{verificationStatus.details.timestamp}</p>
                      </div>
                      <div>
                        <span className="opacity-75">Signature:</span>
                        <p>{verificationStatus.details.signature}</p>
                      </div>
                    </div>
                  </div>
                </div>
              )}
            </div>
          </div>

          {/* How it Works */}
          <div className="mt-12 text-center">
            <h3 className="text-xl font-semibold text-foreground mb-6">
              How Certificate Verification Works
            </h3>
            
            <div className="grid grid-cols-1 md:grid-cols-3 gap-6">
              <div className="text-center">
                <div className="bg-primary/10 p-3 rounded-full w-fit mx-auto mb-3">
                  <FileText className="h-6 w-6 text-primary" />
                </div>
                <h4 className="font-medium text-foreground mb-2">1. Upload Certificate</h4>
                <p className="text-sm text-muted-foreground">
                  Upload your PDF certificate file
                </p>
              </div>
              
              <div className="text-center">
                <div className="bg-primary/10 p-3 rounded-full w-fit mx-auto mb-3">
                  <Shield className="h-6 w-6 text-primary" />
                </div>
                <h4 className="font-medium text-foreground mb-2">2. Verify Signature</h4>
                <p className="text-sm text-muted-foreground">
                  Check digital signature with public key
                </p>
              </div>
              
              <div className="text-center">
                <div className="bg-primary/10 p-3 rounded-full w-fit mx-auto mb-3">
                  <CheckCircle className="h-6 w-6 text-primary" />
                </div>
                <h4 className="font-medium text-foreground mb-2">3. Confirm Authenticity</h4>
                <p className="text-sm text-muted-foreground">
                  Display verification results and details
                </p>
              </div>
            </div>
          </div>

          {/* Sample Certificate Download */}
          <div className="mt-12 text-center">
            <div className="bg-accent border border-border rounded-lg p-6">
              <h4 className="font-semibold text-foreground mb-2">
                Need a Sample Certificate?
              </h4>
              <p className="text-sm text-muted-foreground mb-4">
                Download a sample certificate to test the verification process
              </p>
              <Button variant="outline" className="btn-secondary">
                <Download className="h-4 w-4 mr-2" />
                Download Sample Certificate
              </Button>
            </div>
          </div>
        </div>
      </div>
    </section>
  );
};

export default VerificationSection;